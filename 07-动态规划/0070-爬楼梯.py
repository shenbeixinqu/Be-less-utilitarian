"""
假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
 注意：给定 n 是一个正整数。
 示例 1：
 输入： 2
输出： 2
解释： 有两种方法可以爬到楼顶。
1.  1 阶 + 1 阶
2.  2 阶

 示例 2：
 输入： 3
输出： 3
解释： 有三种方法可以爬到楼顶。
1.  1 阶 + 1 阶 + 1 阶
2.  1 阶 + 2 阶
3.  2 阶 + 1 阶

 Related Topics 动态规划
 👍 1605 👎 0
"""

"""
解题思路:
假设我要跳3阶楼梯，只要把最后跳1阶即（前面跳2阶楼梯的方法数）
加上最后跳2阶（前面跳1阶楼梯的方法数）
"""


def climb_stairs(n):
    if n <= 2:
        return n
    dp = [0] * n
    dp[0] = 1
    dp[1] = 2
    for i in range(2, n):
        dp[i] = dp[i-1] + dp[i-2]
    print(dp)
    return dp[n-1]


climb_stairs(4)